# This is the Pegex grammar for Pegex grammars!
#
# It is written a slightly strict format so that it can be bootstrap
# parsed by a non-Pegex parser.

grammar:
    [
        <comment>*
        <rule_definition>
    ]+
    <comment>*

comment: /(?:<blank_line>|<comment_line>)/

blank_line: /<BLANK>*<EOL>/

comment_line: /<HASH><line>/

line: /<ANY>*<EOL>/

rule_definition: /<WS>*/ <rule_name> /<BLANK>*<COLON><WS>*/ <rule_body> <rule_ending>

rule_name: /(<ALPHA><WORD>*)/

rule_body:
    [ /(?=<LSQUARE>)/ <bracketed_group> ] |
    [ /(?=<SLASH>)/ <regular_expression> ] |
    <rule_group> |
    <rule_reference>

rule_item:
    <bracketed_group> |
    <regular_expression> |
    <rule_reference>

regular_expression: /<SLASH>([^<SLASH>]*)<SLASH>/

rule_reference:
    /<LANGLE>(<rule_modifier>?)<rule_name><RANGLE>(<rule_quantifier>?)/

rule_modifier: /[<BANG><AMP>]/

rule_quantifier: /[<STAR><PLUS><QMARK>]/

bracketed_group: /<LSQUARE><WS>*/ <rule_group> /<WS>*<RSQUARE>/ <group_quantifier>?

group_quantifier: /(<rule_quantifier>)/

rule_group:
    <any_group> |
    <all_group>

all_group:
    <rule_item> [ /<WS>*/ <rule_item> ]+

any_group:
    <rule_item> [ /<WS>*<PIPE><WS>*/ <rule_item> ]+

rule_ending: /<WS>*?(?:<BREAK><WS>*|<SEMI><WS>*|<EOS>)/
